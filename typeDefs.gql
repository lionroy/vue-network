type User {
	_id: ID
	username: String! @unique
	email: String!
	password: String!
	avatar: String
	joinDate: String
	favorites: [Post]
}

type Post {
	_id: ID
	title: String!
	imageUrl: String!
	categories: [String]!
	description: String!
	createdDate: String
	likes: Int
	createdBy: User!
	messages: [Message]
}

type Project {
	_id: ID
	title: String!
	imageUrl: String
	categories: [String]!
	description: String!
	createdDate: String
	likes: Int
	createdBy: User!
	messages: [Message]
}

type Message {
	_id: ID
	messageBody: String!
	messageDate: String
	messageUser: User!
}

type Token {
	token: String!
}

type PostsPage {
	posts: [Post]
	hasMore: Boolean
}

type ProjectsPage {
	projects: [Project]
	hasMorePro: Boolean
}

# Likes for Post / Favorites for User
type LikesFaves {
	likes: Int
	favorites: [Post]
}

type LikesPros {
	likes: Int
	favorites: [Project]
}

type Query {
	getCurrentUser: User
	getPosts: [Post]
	getProjects: [Project]
	getUserPosts(userId: ID!): [Post]
	getUserProjects(userId: ID!): [Project]
	getPost(postId: ID!): Post!
	getProject(projectId: ID!): Project!
	searchPosts(searchTerm: String): [Post]
	searchProjects(searchTerm: String): [Project]
	infiniteScrollPosts(pageNum: Int!, pageSize: Int!): PostsPage
	infiniteScrollProjects(pageNum: Int!, pageSize: Int!): ProjectsPage
}

type Mutation {
	addPost(
	title: String!
	imageUrl: String!
	categories: [String]!
	description: String!
	creatorId: ID!
	): Post!
	addProject(
	title: String!
	imageUrl: String
	categories: [String]!
	description: String!
	creatorId: ID!
	): Project!
	updateUserPost(
	postId: ID!
	userId: ID!
	title: String!
	imageUrl: String!
	categories: [String]!
	description: String!
	): Post!
	updateUserProject(
	projectId: ID!
	userId: ID!
	title: String!
	imageUrl: String
	categories: [String]!
	description: String!
	): Project!
	deleteUserPost(postId: ID!): Post!
	deleteUserProject(projectId: ID!): Project!
	addPostMessage(messageBody: String!, userId: ID!, postId: ID!): Message!
	addProjectMessage(messageBody: String!, userId: ID!, projectId: ID!): Message!
	likePost(postId: ID!, username: String!): LikesFaves!
	likeProject(projectId: ID!, username: String!): LikesPros!
	unlikePost(postId: ID!, username: String!): LikesFaves!
	unlikeProject(projectId: ID!, username: String!): LikesPros!

	signinUser(username: String!, password: String!): Token
	signupUser(username: String!, email: String!, password: String!): Token
}